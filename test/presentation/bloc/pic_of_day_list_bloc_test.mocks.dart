// Mocks generated by Mockito 5.3.0 from annotations
// in space_pics/test/presentation/bloc/pic_of_day_list_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:space_pics/domain/entities/pic_of_day.dart' as _i5;
import 'package:space_pics/domain/repositories/pictures_repository.dart' as _i2;
import 'package:space_pics/domain/usecases/get_pictures.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakePicturesRepository_0 extends _i1.SmartFake
    implements _i2.PicturesRepository {
  _FakePicturesRepository_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [GetPictures].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetPictures extends _i1.Mock implements _i3.GetPictures {
  MockGetPictures() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.PicturesRepository get repo =>
      (super.noSuchMethod(Invocation.getter(#repo),
              returnValue:
                  _FakePicturesRepository_0(this, Invocation.getter(#repo)))
          as _i2.PicturesRepository);
  @override
  _i4.Future<List<_i5.PicOfDay>> execute(
          {String? startDate,
          String? endDate,
          String? keyword,
          bool? offline}) =>
      (super.noSuchMethod(
              Invocation.method(#execute, [], {
                #startDate: startDate,
                #endDate: endDate,
                #keyword: keyword,
                #offline: offline
              }),
              returnValue:
                  _i4.Future<List<_i5.PicOfDay>>.value(<_i5.PicOfDay>[]))
          as _i4.Future<List<_i5.PicOfDay>>);
}
